/*
определяем название пакета, где лежит файл.
приложение может состоять из множества файлов, которые как-то связаны между собой.
чтобы было проще организовать такую работу, используются пакеты.

в начале каждого .go файла обязательно должен быть объявлён пакет

пакет main - точка фхода в программу. попробуем изменить имя пакета и запустить приложение. получим ошибку
*/
package main

import "fmt"

/*
go - компилируемый язык. когда мы компилируем наш проект, на выходе получаем бинарный (исполняемый) файл.
то есть файл, содержимое которого понимает компьютер.

для создания бинарного файла - команда go build <имя файла>.go. для запуска го программы
используется команда go run, которая, по сути, создаёт бинарный файл, запускает его, а потом удаляет
*/

/*
функция main.
она обязательна и является точкой входа в приложение. без неё не получится запустить программу
если изменить имя функции, go её не запустит. попробуем проверить. то есть go запускает только функцию main.
также нельзя иметь две функции main в одном пакете. также все функции должны иметь разные сигнатуры. о том, что
такое сигнатура функции, почитайте в гугле
о функция подробнее - позже.
*/
func main() {
	// ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
	a := "Hello world!"           // первый вариант, с помощью которого мы инициализируем (создаём её) переменную
	var b string = "Hello world!" // второй вариант с использованием ключевого слова var (здесь string можно опустить. вопрос к вам: почему?)

	fmt.Println(a, b) // выводим две переменные в консоль при запуске программы.
	// ЗАМЕЧАНИЕ: попробуйте навестись на функцию Println() из пакета fmt. так можно почитать и посмотреть, что делает функция

	a = "MAKIMA"   // здесь через = присвоили уже имеющейся переменной новое значение
	fmt.Println(a) // вывод будет отличаться от того, что выше

	// КОНСТАНТЫ
	const c = 15
	const newStr = "constant"
	// константы нельзя изменять, присваивая им другие значения. попробуйте сами

	// ТИПЫ ДАННЫХ
	var str string = "строка"   // строковый тип данных. здесь могли записать str := "строка"
	var dec int = 10            // целочисленный тип
	var float float64 = 10.5    // числа с плавающей точкой (дробные)
	var trueOrFalse bool = true // логический тип данных (может принимать значения только true или false)
	var bytik byte = 97         // байт - синоним для uint8 (от 0 до 255). строки в го состоят из набора байт
	var r rune = 'a'            // руны - это символы. объявляются в одинарных кавычках

	fmt.Println(str)
	fmt.Println(dec)
	fmt.Println(float)
	fmt.Println(trueOrFalse)
	fmt.Println(bytik)
	fmt.Println(r)

	fmt.Println(string(bytik)) // вот так можно получить букву и байта (ведь строки в го - это набор байт)
}

/*
	ЗАДАНИЕ 1

	создать новый проект, в котором создать новый main.go файл. переписать в этот файл всё то, что написано в
	данном файле.
*/

/*
	ЗАДАНИЕ 2

	вывести информацию о себе в следующем виде:
	ФИО: Молодкий Сергей Олегович
	Дата рождения: 25.05.2000
	Рост: 183.5
	Вес: 70
	Место жительства: г. Рязань, ул. Новосёлов

	Данные для ФИО и даты рождения записать в константы (подумайте, для почему именно в константы?)

	перейти по ссылке: https://stepik.org/course/54403/syllabus и пройти первые четрые (4) пункта первого раздела.
	то есть нужно пройти пукты 1.1, 1.2, 1.3 и 1.4. дальше пока не ходите
*/
