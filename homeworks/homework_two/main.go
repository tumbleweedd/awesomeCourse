/*
1. Написать функцию фейс-контроль для панели администратора.
Функция должна проверять роль пользователя. Роли: amin, user, manager
В зависимости, какая роль у пользователя, у функции будет разное поведение (функция должна возвразать 3 аргумента):
  - если пользователь имеет роль admin, функция должна ВОЗВРАЩАТЬ: строку "у вас все есть все права", число 1 (уникальный

идентификатор для админа), ошибку, которая равна nil;
  - если пользователь - manager, функуия возвращает строку "у вас есть частичные права", число 2 и ошибку, которая рвна nil;
  - если пользователь - user, функция возвращает пустую строку, число 0 и ошибку с текстом "forbidden"

Также в функции main обратобоать вызвать эту функцию. И проверить ошибку на nil: если ошибка не равна nil, вывести в
консоль эту ошибка, а затем завершить выполнение функции main с помощью return

Подсказка: чтобы содать ошибку, можно использовать функцию New(message string) err из пакета errors (errors.New())
Не бойтесь гуглить.
*/
package main

import (
	"errors"
	"fmt"
)

func Control(role string) (string, int, error) {
	switch role {
	case "admin":
		return "у вас есть все права", 1, nil
	case "manager":
		return "у вас есть частичные права", 2, nil
	case "user":
		return "", 0, errors.New("forbidden")
	default:
		return "", 0, errors.New("unknown role")
	}
}

func main() {

	role := "admin"
	message, id, err := Control(role)

	if err != nil {
		fmt.Println("Ошибка:", err)
		return
	}

	fmt.Printf("%s (ID: %d)\n", message, id)
}

/*
2. Написать функцию, которая имеет следующее поведение: если число положительное, то прибавьте к нему 10. Иначе
вычтите из него 10.
В фунции main читайте число с консоли, записыайте его в переменную и передавайте в написанную ранее функцию.
Функция должна делать описанную проверку и выводить число в консоль
*/
